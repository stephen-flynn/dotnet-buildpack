#!/usr/bin/env bash

: ${DOTNET_RUNTIME_VERSION:="1.1.2"}
: ${DOTNET_SDK_VERSION:="1.0.4"}


# Install .NET Core
DOTNET_CACHE_LOCATION=${CACHE_DIR}/dotnet/${DOTNET_SDK_VERSION}
if [ ! -d ${DOTNET_CACHE_LOCATION} ]; then
	rm -rf ${CACHE_DIR}/dotnet/* || true
	mkdir -p ${DOTNET_CACHE_LOCATION}/{sdk,runtime}
	DOTNET_SDK_DOWNLOAD_URL=https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-dev-ubuntu-x64.$DOTNET_SDK_VERSION.tar.gz

	echo "Downloading .NET SDK version ${DOTNET_SDK_VERSION} and runtime version ${DOTNET_RUNTIME_VERSION} from ${DOTNET_SDK_DOWNLOAD_URL}"

	curl --progress-bar ${DOTNET_SDK_DOWNLOAD_URL} | tar xz -C ${DOTNET_CACHE_LOCATION}/sdk
	find ${DOTNET_CACHE_LOCATION}/sdk/sdk/${DOTNET_SDK_VERSION}/runtimes/* -maxdepth 0 ! -name unix ! -name any -exec rm -r {} +
	rm -f ${DOTNET_CACHE_LOCATION}/sdk/sdk/${DOTNET_SDK_VERSION}/nuGetPackagesArchive.lzma

	DOTNET_RUNTIME_DOWNLOAD_URL=https://dotnetcli.blob.core.windows.net/dotnet/release/1.1.0/Binaries/$DOTNET_RUNTIME_VERSION/dotnet-ubuntu-x64.$DOTNET_RUNTIME_VERSION.tar.gz
	curl --progress-bar ${DOTNET_RUNTIME_DOWNLOAD_URL} | tar xz -C ${DOTNET_CACHE_LOCATION}/runtime
fi
export PATH="${DOTNET_CACHE_LOCATION}/sdk:$PATH"
cp -r ${DOTNET_CACHE_LOCATION}/runtime ${BUILD_DIR}/dotnet
cat <<EOF >$BUILD_DIR/.profile.d/000_dotnet.sh
export PATH="\$HOME/dotnet:\$PATH"
EOF

# figure out which projects we should deploy/publish
if [ -e ${DEPLOYMENT_FILE_LOCATION} ]; then
	PROJECTS=$(awk -F "=" '/project/ {print $2}' ${DEPLOYMENT_FILE_LOCATION} | tr -d ' ')
else
	echo "No deployment file found"
	exit 1
fi

export NUGET_PACKAGES="${CACHE_DIR}/nuget/cache"

# run on  each project we need to publish, build it and deploy it
 while IFS=';' read -ra ADDR; do
      for i in "${ADDR[@]}"; do
			PROJECT_DIR=${SRC_DIR}/$i
			PROJECT_DIR_NAME=$(basename $PROJECT_DIR)
			PROJECT_FILE=${SRC_DIR}/$i/$PROJECT_DIR_NAME.csproj

			echo "Restoring packages for ${PROJECT_DIR_NAME}"
			dotnet restore --runtime ubuntu.14.04-x64 ${PROJECT_FILE}

			echo "Publishing ${PROJECT_DIR_NAME}"
			dotnet publish ${PROJECT_FILE} --output ${BUILD_DIR}/heroku_output/${PROJECT_DIR_NAME} --runtime ubuntu.14.04-x64 --configuration Release

			echo "Publish of '$PROJECT_DIR_NAME' successed"
      done
 done <<< "$PROJECTS"
